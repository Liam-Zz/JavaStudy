/*
package com.liam.demo;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.annotation.JSONField;
import com.alibaba.fastjson.annotation.JSONType;
import com.alibaba.fastjson.parser.ParserConfig;

import java.io.IOException;

public class FastJsonDemo01 {
    public static void main(String[] args) throws IOException {
        //将 java 对象序列化为 JSON 字符串
        Persion persion = new Persion("Liam",18);
        String jsStr = JSON.toJSONString(persion);
        System.out.println(jsStr);

        //将 JSON字符串反序列化为 Java 对象
        String jsonString2 = "{\"user_age\":18,\"user_name\":\"Liam\"}";
        Persion persion1 = JSON.parseObject(jsonString2, Persion.class);
        System.out.println(persion1.getName() + "," + persion1.getAge());

        //根据@type类型进行利用
        String jsonCalc = "{\"@type\":\"java.lang.Runtime\",\"@type\":\"java.lang.Runtime\",\"@type\":\"java.lang.Runtime\"}";
        */
/*
            `fastjson`在`1.2.24`之后默认禁用@type，需通过`ParserConfig.getGlobalInstance().addAccept("java.lang");`来开启
            不开启则报错 ”autoType is not support“
         *//*

        ParserConfig.getGlobalInstance().addAccept("java.lang");
        Runtime runtime = (Runtime)JSON.parseObject(jsonCalc, Object.class);
        runtime.exec("calc.exe");

    }



    //Persion静态类
    */
/*
       1、`Java`类的属性名和`JSON`字段名是相同的，因此可以直接使用`Person.class`来进行映射,如果不同怎么办？
            解答：使用 @JSONField 注解指定映射
       2、json和对象转换过程中，字符串和属性顺序问题，默认是按照字母顺序排序，如果想要按照属性的声明顺序排序怎么办？
            解答：通过 @JsonType 注解指定属性序列化顺序

       3、@Type是什么？
            解答：
                1、`@type`是`fastjson`中的一个特殊注解，用于标识`JSON`字符串中的某个属性是一个`Java`对象的类型
                2、`JSON`字符串反序列化为`Java`对象时，如果`JSON`字符串中包含`@type`属性，`fastjson`会根据该属性的值来确定反序列化后的`Java`对象的类型。

     *//*

    @JSONType(orders = {"name","age"})
    public static class Persion{
        @JSONField(name = "user_name")
        private String name;
        @JSONField(name = "user_age")
        private int age;

        public Persion(String name, int age) {
            this.name = name;
            this.age = age;
        }

        public String getName() {
            return name;
        }

        public int getAge() {
            return age;
        }
    }
}

*/
