package com.liam.demo.oop.intermediate.extend;

public class Demo {
    /*
        问题引出:
            一个是 小学生类,一个是研究生类,两个类的属性和方法有很多是相同的怎么办?

        解决方案:
            使用继承(提高代码复用性)

        继承原理图:
            新建父类,集成相同方法;

        关键字: extends

        //继承的优点
            1.代码复用性提高
            2.代码可扩展性提高
        细节：
            1.子类继承了所有的属性和方法，但私有属性和方法不能在子类直接访问，要通过父类提供的公共的方法去访问。
            2.子类必须调用父类的构造器，完成父类的初始化
            3.当子类创建对象时，不管使用子类的那个构造器，默认情况下总会去调用父类的无参构造器，如果父类没有提供无参构造器，
                则必须在子类的构造器中用Super去指定使用父类的那个构造器完成对父类的初始化。
            4.如果希望指定去调用父类的某个构造器，则显示的调用一下 super(参数列表)
            5.super在使用时，必须放在构造器第一行，只能在构造器中使用
            6.super()和this()都只能放在构造器第一行，因此两个方法不能共存在一个构造器；
            7.java所有类都是Object类的子类，Object是所有类的基类。
            8.父类构造器的调用不限于直接父类！ 将一直往上追溯到Object(顶级父类)
            9.子类最多只能继承一个父类（直接继承） java中是单继承机制
            10.不能滥用继承，子类和父类之间必须满足is-a的逻辑关系


     */

}
