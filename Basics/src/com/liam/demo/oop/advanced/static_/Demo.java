package com.liam.demo.oop.advanced.static_;

/**
 * @Classname: JavaStudy
 * @Date: 2024/6/30 00:25
 * @Author: Liam
 * @Description:
 */

public class Demo {
    /*
    类变量:
    问题:一群小孩在玩雪人,不时有新的小孩加入,请问如何知道现在共有多少人在玩?

    思路:
    1.在 main 方法中定义一个变量 count
    2,当一个小孩加入后 count++, 最后 count 就记录了有多少小孩了

    ps:
    1.static 变量是同类所有对象共享
    2.类变量也叫静态变量/静态属性,是该类的所有对象共享的变量.

    定义语法:
        访问修饰符 static 数据类型 变量名 (推荐)
        static 访问修饰符 数据类型 变量名

    访问类变量:
    静态变量的访问权限和范围和普通变量一致
    类名.类变量名(推荐)
    对象.类变量名

    什么时候需要使用类变量?
    1.当我们需要让某个类的所有对象都共享一个变量时

    类变量和实例变量的区别?
    1.类变量时共享的,实例变量是独享的

    具有 static 修饰的称为类变量/静态变量,否则称为实例变量/非静态变量
    类变量时在类加载时就初始化了,即使没有创建对象,只要类加载了就可以使用类变量
    类变量的声明周期是随着类的加载开始,随着类的消亡而销毁

    类方法
    语法:
    访问修饰符 static 数据返回类型 方法名(){} (推荐)
    static 访问修饰符 数据返回类型 方法名(){}

    调用方式:
    类名.类方法名
    对象.类方法名

    类方法的使用场景
    1.当方法中不涉及任何对象的相关成员时,则可以将方法设计成静态方法,提高开发效率(不创建实例,也可以调用某个方法,当做工具使用吗,这时把方法做成静态方法非常合适)\


    类方法的使用细节:
    1.类方法和普通方法都是随着类的加载而加载,将结构信息存储在方法区
    2.类方法中无 this
    3.类方法可通过类名或者对象名调用
    4.普通方法和对象有关,需要通过对象名调用,静态方法不需要对象创建即可调用
    5.类方法中不允许使用和对象有关的关键字
    6.类方法中只能访问静态变量或静态方法
    7.普通方法即可静态成员,也可以访问非静态成员
     */



}
